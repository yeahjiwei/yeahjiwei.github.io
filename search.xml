<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>rdd 词频统计</title>
      <link href="/2022/01/06/blog2/"/>
      <url>/2022/01/06/blog2/</url>
      
        <content type="html"><![CDATA[<h2 id="兄弟们，一如既往送福利，看到就是赚到"><a href="#兄弟们，一如既往送福利，看到就是赚到" class="headerlink" title="兄弟们，一如既往送福利，看到就是赚到"></a>兄弟们，一如既往送福利，看到就是赚到</h2><hr><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">word_result = rdd.flatMap(<span class="keyword">lambda</span> line: line.split(<span class="string">&quot; &quot;</span>)) \</span><br><span class="line">    .<span class="built_in">map</span>(<span class="keyword">lambda</span> word: (word, <span class="number">1</span>)) \</span><br><span class="line">    .reduceByKey(<span class="keyword">lambda</span> a, b: a + b) \</span><br><span class="line">    .collect()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rdd词频统计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pyecharts绘图格式</title>
      <link href="/2022/01/06/blog1/"/>
      <url>/2022/01/06/blog1/</url>
      
        <content type="html"><![CDATA[<h2 id="兄弟们，话不多说，直接上代码，懂得都懂"><a href="#兄弟们，话不多说，直接上代码，懂得都懂" class="headerlink" title="兄弟们，话不多说，直接上代码，懂得都懂"></a>兄弟们，话不多说，直接上代码，懂得都懂</h2><hr><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">c = (</span><br><span class="line">    Pie()</span><br><span class="line">        .add(<span class="string">&quot;title&quot;</span>, [<span class="built_in">list</span>(z) <span class="keyword">for</span> z <span class="keyword">in</span> <span class="built_in">zip</span>(a, b)])</span><br><span class="line">        .set_global_opts(title_opts=opts.TitleOpts(<span class="string">&quot;title&quot;</span>))</span><br><span class="line">        .set_series_opts(</span><br><span class="line">        tooltip_opts=opts.TooltipOpts(trigger=<span class="string">&quot;item&quot;</span>, formatter=<span class="string">&quot; &#123;a&#125; &lt;br/&gt; &#123;b&#125;: &#123;c&#125; (&#123;d&#125;%)&quot;</span>),</span><br><span class="line">        label_opts=opts.LabelOpts(formatter=<span class="string">&quot;&#123;b&#125;: &#123;c&#125; (&#123;d&#125;%)&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = (</span><br><span class="line">    WordCloud()</span><br><span class="line">        .add(<span class="string">&quot;&quot;</span>, num_word, word_size_range=[<span class="number">30</span>, <span class="number">10</span>], shape=SymbolType.DIAMOND)</span><br><span class="line">        .set_global_opts(title_opts=opts.TitleOpts(title=<span class="string">&quot;title&quot;</span>))</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">b = (</span><br><span class="line">    Bar()</span><br><span class="line">        .add_xaxis(x)</span><br><span class="line">        .add_yaxis(<span class="string">&quot;title&quot;</span>, y)</span><br><span class="line">        .set_global_opts(title_opts=opts.TitleOpts(title=<span class="string">&quot;title&quot;</span>))</span><br><span class="line">)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pyecharts </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
